#version 400
#extension GL_ARB_tessellation_shader : enable


layout(triangles, equal_spacing,ccw) in;

in vec3 tcPosition[];
in vec2 TexCoord_ES[];
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
//uniform sampler2D texture;
out vec2 texCoord;

void main()
{

	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	
	//vec4 a = mix(gl_in[1].gl_Position,gl_in[0].gl_Position, u);
	//vec4 b = mix(gl_in[2].gl_Position,a, u);
	//vec4 position = mix(a, b,v);
	//texCoord = position.xy;
	
	texCoord = vec2((vec2(gl_TessCoord.x) * TexCoord_ES[0]) + (vec2(gl_TessCoord.y) * TexCoord_ES[1]) + (vec2(gl_TessCoord.z) * TexCoord_ES[2]));
	//vec4 map = texture(texture,texCoord);
	vec3 p0 = (gl_TessCoord.x * tcPosition[0]);// + (map.r * 3.0);
	vec3 p1 = (gl_TessCoord.y * tcPosition[1]);// + (map.g * 3.0);
	vec3 p2 = (gl_TessCoord.z * tcPosition[2]);// + (map.b *3.0);
	
	
	vec3 tePosition = p0+p1+p2;
	gl_Position = projection *  view * model * vec4(tePosition,1.0);

}
